// Author : Samagra Pathak //
// #include<bits/stdc++.h>
#include<iostream>
#include<iomanip>
#include<algorithm>
#include<vector>
#include<utility>
#include<set>
#include<unordered_set>
#include<list>
#include<iterator>
#include<deque>
#include<queue>
#include<stack>
#include<set>
#include<bitset>
#include<random>
#include<map>
#include<unordered_map>
#include<stdio.h>
#include<complex>
#include<math.h>
#include<cstring>
#include<chrono>
#include<string>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
using namespace std;

//........................// pbds //..........................................
// using namespace __gnu_pbds;
// typedef tree<int, null_type, less_equal<int>, rb_tree_tag,
//         tree_order_statistics_node_update>
//         op_set;

// find_by_order(k)  returns iterator to kth element starting from 0;
// order_of_key(k) returns count of elements strictly smaller than k;
//.............................................................................

#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define MOD 1000000007
#define MOD1 998244353
#define INF 1e18
#define endl "\n"
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define PI 3.141592653589793238462
#define set_bits __builtin_popcountll
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define MEM(a, b) memset(a, (b), sizeof(a))
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef vector<ll> vi;
typedef pair<ll, ll> pii;
typedef vector<pii> vpii;
#define umap unordered_map
#define uset unordered_set
#define fo(i,a,b) for(ll i = a; i <= b; i++)
#define forr(i,a,b) for(ll i = a; i >= b; i--)

#define py cout<<"YES\n";
#define pn cout<<"NO\n";

/***************************************************(debugging)*****************************************************************************************************************************************************************/
#ifndef ONLINE_JUDGE

#define debug(x) cerr << #x << " ";_print(x);cerr<<endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}

/***************************************************(functions)*******************************************************************************************************************************************************************/
// functions //
// add template for seive here //
ll binpo(ll a, ll b) { ll res = 1; while (b > 0) {if (b & 1) res = res * a; a = a * a; b >>= 1;} return res;}
ll binpomo(ll a, ll b, ll m) {a %= m; ll res = 1; while (b > 0) {if (b & 1) res = res * a % m; a = a * a % m; b >>= 1;} return res;}
ll ceil_div(ll a, ll b) {return a % b == 0 ? a / b : a / b + 1;}
void precision(int a) {cout << setprecision(a) << fixed;}
ll gcd(ll a, ll b) {return (b == 0 ? a : gcd(b, a % b));}
ll mminvprime(ll a, ll b) {return binpomo(a, b - 2, b);}
ll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}
ll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}
ll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}
ll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m

/***************************************************(solution)**********************************************************************************************************************************************************************/
ll modu(ll a, ll b) {if (b - a > 0) { return b - a;} else {return a - b;}}
ll mod(ll a) {if (a > 0) {return a;} else {return -a;}}
// ll C(ll N, ll R) { if (R == 0)return 1; ll res = 1; for (int i = 1; i <= R; i++) { res = (res * (N - i + 1)); res = (res / i);} return res;}


bool check(ll mid,vi &v){
    
}
    ll hi = ; // max possible value;
    ll lo = ; // min possible value;
    ll ans = ; // default answer
   
   while(hi>=lo){
     ll mid = lo + (hi-lo)/2;
     if(check(mid,v)){
         hi = mid - 1;
         ans = mid;
     }else{
         lo = mid + 1;
     }
   }
   cout << ans << endl;
